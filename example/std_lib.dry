# Generic

eq(a, b): bool
neq(a, b): bool
length(a): num
at(a, num): T
concat(a, b): T
contains(list, a): bool
isEmpty(x): bool
isNotEmpty(x): bool

# Arithmetic

abs(num): num
inc(num): num
dec(num): num
sum(num1, num2): num
sub(num1, num2): num
mul(num1, num2): num
div(num1, num2): num
mod(num1, num2): num
min(num1, num2): num
max(num1, num2): num
pow(num1, num2): num
sqrt(num): num
round(num): num
floor(num): num
ceil(num): num
sin(num): num
cos(num): num
tan(num): num
log(num): num
gt(num1, num2): bool
lt(num1, num2): bool
ge(num1, num2): bool
le(num1, num2): bool
isNegative(num): bool
isPositive(num): bool
isZero(num): bool
isEven(num): bool
isOdd(num): bool

# Logic

and(bool1, bool2): bool
or(bool1, bool2): bool
not(bool): bool
xor(bool1, bool2): bool

# String

substring(str, start, length): string
startswith(str, text): bool
endswith(str, text): bool
replace(str, old, new): string
uppercase(str): string
lowercase(str): string
trim(str): string
match(str, regex): bool
split(str, delimiter): list
join(list, delimiter): string
format(str, ...args): string
toString(T): string

# Lists

first(list): T
last(list): T
tail(list): T
take(x, list): list
drop(x, list): list
addFirst(a, list): list
addLast(a, list): list
remove(index, list): list
reverse(list): list

# Casting

toNumber(a): number
toInteger(a): number
toDecimal(a): number
toString(a): string
toBoolean(a): bool
isNumber(x): bool
isInteger(x): bool
isDecimal(x): bool
isString(x): bool
isBoolean(x): bool

# Control

if(bool, expr1, expr2)
try(expr, handler)

# Error

error(a)

# Functions

map(func, list): list
filter(func, list): list
reduce(func, list, initial): T
sort(func, list): list
all(func, list): bool
any(func, list): bool
zip(func, list1, list2): list